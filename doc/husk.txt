*husk.txt*	Features that boost your command line mode productivity.

Authors: Bruno Sutic <https://www.github.com/bruno->
         John C F <https://www.github.com/critiqjo>

==============================================================================
INTRODUCTION					*husk-plus*

Husk-plus introduces mappings that boost command line mode productivity along
with (basic) undo support.

==============================================================================
MAPPINGS					*husk-plus-mappings*

All mappings are defined only in vim's command line mode.
(undoable = the state prior to its execution is pushed to undo stack)

*<Plug>(husk)cursor-home*         	Wraps |c_<Home>|
					Default binding: `<C-a>`

*<Plug>(husk)cursor-end*          	Wraps |c_<End>|
					Default binding: `<C-e>`

*<Plug>(husk)cursor-left*         	Wraps |c_<Left>|
					Default binding: `<M-h>`

*<Plug>(husk)cursor-right*        	Wraps |c_<Right>|
					Default binding: `<M-l>`

*<Plug>(husk)cursor-w-std*        	Cursor w-jump
					Default binding: `<M-w>`

*<Plug>(husk)cursor-b-std*        	Cursor b-jump
					Default binding: `<M-b>`

*<Plug>(husk)cursor-e-std*        	Cursor e-jump
					Default binding: `<M-e>`

*<Plug>(husk)cursor-ge-std*       	Cursor ge-jump
					No default binding

*<Plug>(husk)cursor-w-alt*        	Cursor W-jump
					Default binding: `<M-W>`

*<Plug>(husk)cursor-b-alt*        	Cursor B-jump
					Default binding: `<M-B>`

*<Plug>(husk)cursor-e-alt*        	Cursor E-jump
					Default binding: `<M-E>`

*<Plug>(husk)history-prefix-up*   	Wraps |c_<Up>| (undoable)
					Default binding: `<M-k>`

*<Plug>(husk)history-prefix-down* 	Wraps |c_<Down>| (undoable)
					Default binding: `<M-j>`

*<Plug>(husk)history-up*          	Wraps `<Space><BS>`|c_CTRL-P| (undoable)
					No default binding

*<Plug>(husk)history-down*        	Wraps `<Space><BS>`|c_CTRL-N| (undoable)
					No default binding

*<Plug>(husk)kill-line-forw*      	Clear line after cursor (undoable)
					Default binding: `<C-k>`

*<Plug>(husk)kill-line-backw*     	Clear line backwards (undoable)
					Default binding: `<C-u>`

*<Plug>(husk)kill-word-forw-std*  	Delete "word" after cursor (undoable)
					Default binding: `<M-d>`

*<Plug>(husk)kill-word-backw-std* 	Delete "word" backwards (undoable)
					Default binding: `<C-w>`

*<Plug>(husk)kill-word-forw-alt*  	Delete "WORD" after cursor (undoable)
					Default binding: `<C-f><M-d>`

*<Plug>(husk)kill-word-backw-alt* 	Delete "WORD" backwards (undoable)
					Default binding: `<C-f><C-w>`

*<Plug>(husk)kill-char-forw*      	Wraps |c_<Del>|
					Default binding: `<M-x>`

*<Plug>(husk)kill-char-backw*     	Wraps |c_<BS>|
					No default binding

*<Plug>(husk)undo*                	Pops the undo stack
					Default binding: `<C-_>` (CTRL-/)

*<Plug>(husk)leader*              	By itself, a |<NOP>|
					Default binding: `<C-f>`

==============================================================================
GLOBALS 					*husk-plus-globals*

*g:husk#disable_default_leader* = 0	Skip mapping husk leader to <C-f>
*g:husk#disable_default_bindings* = 0	Skip all default mappings
*g:husk#undo_stack_capacity* = 64	Undo stack max capacity
*g:husk#undo_stack_cut_by* = 16		When undo stack overflows, the oldest
					"cut_by" number of items is popped off

==============================================================================
CUSTOMIZING					*husk-plus-customize*
>
	let g:husk#disable_default_leader = 1
	cmap <C-x> <Plug>(husk)leader
	cmap <C-p> <Plug>(husk)history-up
	cmap <C-n> <Plug>(husk)history-down
<
==============================================================================
CONTRIBUTING					*husk-plus-contributing*

Contributions in the form of bug reports and patches are welcome. Visit:

  https://github.com/critiqjo/husk-plus.vim

==============================================================================
LICENSE						*husk-plus-license*

Copyright (c) John C F, Bruno Sutic. Distributed under the MIT license.

 vim:tw=78:ts=8:ft=help:norl:
